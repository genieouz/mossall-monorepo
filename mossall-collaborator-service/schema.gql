# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Organization {
  id: ID!

  """Nom de l'organisation"""
  name: String!

  """Email de l'utilisateur racine ou admin"""
  rootEmail: String!
  maxDemandeAmount: Float!
  amountPercent: Float!
  fees: Float!
  demandeDeadlineDay: Float!
}

type User {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: String!
  email: String!
  firstName: String!
  lastName: String!
  organization: Organization!
  phoneNumber: String
  address: String
  position: String
  uniqueIdentifier: String
  salary: Float
  balance: Float
  wizallAccountNumber: String
  bankAccountNumber: String
  totalDemandeAmount: Float!
  role: String
  blocked: Boolean
  birthDate: DateTime
  favoriteWallet: Wallet
  enableEmailNotification: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Possible wallets"""
enum Wallet {
  WAVE
  ORANGE_MONEY
}

type Session {
  """Null if user must reset his password"""
  user: User

  """Not null if user must reset his password. Null other cases"""
  token: String

  """False if user must reset his password"""
  enabled: Boolean!

  """Not null if user must reset his password. Null other cases"""
  expires_in: Float

  """Not null if user must reset his password. Null other cases"""
  refresh_token: String

  """Not null if user must reset his password. Null other cases"""
  access_token: String
}

type DemandeMetric {
  year: Float!
  month: Float!
  value: Float!
}

type Demande {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: ID!
  amount: Float!
  number: Float!
  fees: Float!
  status: DemandeStatus!
  rejectedReason: String
}

enum DemandeStatus {
  VALIDATED
  PAYED
  REJECTED
  PENDING
  IN_PROCESS
  CANCELLED
}

type Payment {
  id: ID!
}

type Activity {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: ID!
}

type Query {
  """Token to call reset password endpoint"""
  requestResetCollaboratorPassword(oldPassword: String!): String!
  loginCollaborator(loginInput: LoginInput!): Session!
  refreshCollaboratorToken(refreshToken: String!): Session!
  fetchMyDemandesMetrics(metricsFilter: DemandeMetricFilter!): [DemandeMetric!]!
  checkMyDemandeFees(demandeAmount: Float!): Float!
  fetchMyDemandes: [Demande!]!
  fetchMyDemande(demandeId: ID!): Demande!
  checkMyBalance: Float!
  fetchActivities: [Activity!]!
  fetchActivity(activityId: ID!): Activity!
  fetchPayments: [Payment!]!
  fetchPayment(paymentId: ID!): Payment!
}

input LoginInput {
  email: String!
  password: String!
}

input DemandeMetricFilter {
  startDate: DateTime!
  endDate: DateTime!
}

type Mutation {
  resetCollaboratorPassword(resetPasswordInput: ResetPasswordInput!): Boolean!
  startForgotPassword(email: String!): Boolean!
  addDemande(demandeInput: DemandeInput!): Demande!
  updateDemande(demandeInput: DemandeUpdateInput!, demandeId: ID!): Boolean!
  cancelDemande(demandeId: ID!): Boolean!
  updateMyBankAccount(bankAccountNumber: String!): Boolean!
  updateMyFavoriteWallet(wallet: Wallet!): Boolean!
  createActivity(activityInput: ActivityInput!): Activity!
  updateActivity(activityInput: ActivityUpdateInput!, activityId: ID!): Boolean!
}

input ResetPasswordInput {
  token: String!
  password: String!
}

input DemandeInput {
  amount: Float!
}

input DemandeUpdateInput {
  amount: Float!
}

input ActivityInput {
  id: String!
}

input ActivityUpdateInput {
  id: String!
}